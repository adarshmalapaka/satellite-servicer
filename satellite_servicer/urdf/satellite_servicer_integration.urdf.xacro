<?xml version="1.0"?>
<!-- Name your robot here -->
<robot name ="satellite_servicer" xmlns:xacro="http://wiki.ros.org/xacro">

	<!-- Include your urdf files here -->
	<!-- Include Robot's urdf filepath -->
	<xacro:include filename="$(find satellite_servicer)/urdf/satellite_servicer.urdf"/>

	<!-- Add your gazebo sensors here -->
	<!-- blade camera plugin -->
    <gazebo reference="blade_camera_link">
        <sensor type="camera" name="blade_camera">
        <update_rate>30.0</update_rate>
        <camera name="head">
            <horizontal_fov>1.3962634</horizontal_fov>
            <image>
            <width>800</width>
            <height>800</height>
            <format>R8G8B8</format>
            </image>
            <clip>
            <near>0.02</near>
            <far>300</far>
            </clip>
            <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                That pixel's noise value is added to each of its color
                channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
            </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>0.0</updateRate>
            <cameraName>sat_serv/blade_camera</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>blade_camera_link</frameName>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
        </plugin>
        </sensor>
    </gazebo>

    <!-- rear camera plugin -->
    <gazebo reference="rear_camera_link">
        <sensor type="camera" name="rear_camera">
        <update_rate>30.0</update_rate>
        <camera name="head">
            <horizontal_fov>1.3962634</horizontal_fov>
            <image>
            <width>800</width>
            <height>800</height>
            <format>R8G8B8</format>
            </image>
            <clip>
            <near>0.02</near>
            <far>300</far>
            </clip>
            <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                That pixel's noise value is added to each of its color
                channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
            </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>0.0</updateRate>
            <cameraName>sat_serv/rear_camera</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>rear_camera_link</frameName>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
        </plugin>
        </sensor>
    </gazebo>

	<!--  Gazebo plugin for control here is already added for you -->
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/satellite_servicer</robotNamespace>
            <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
            <legacyModeNS>true</legacyModeNS>
        </plugin>
    </gazebo>


	<!-- Blade Camera -->
	<link name="blade_camera_link">
		<collision>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<box size="0.10 0.10 0.10"/>
			</geometry>
		</collision>
		<visual>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<box size="0.10 0.10 0.10"/>
			</geometry>
				<material name="red"/>
		</visual>

		<inertial>
			<mass value="1e-5" />
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
		</inertial>
	</link>

	<joint name="blade_camera_joint" type="fixed">
		<axis xyz="0 0 0" />
		<origin xyz="0.27 -0.15 0.0" rpy="1.5708 3.1416 0"/>
		<parent link="cutter_tool_link"/>
		<child link="blade_camera_link"/>
	</joint>

    <!-- Rear Camera -->
	<link name="rear_camera_link">
		<collision>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<box size="0.10 0.10 0.10"/>
			</geometry>
		</collision>
		<visual>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<box size="0.10 0.10 0.10"/>
			</geometry>
				<material name="blue"/>
		</visual>

		<inertial>
			<mass value="1e-5" />
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
		</inertial>
	</link>

	<joint name="rear_camera_joint" type="fixed">
		<axis xyz="0 0 0" />
		<origin xyz="-0.1 0.0 0.0" rpy="0 0 3.1416"/>
		<parent link="blade_camera_link"/>
		<child link="rear_camera_link"/>
	</joint>

</robot>	


